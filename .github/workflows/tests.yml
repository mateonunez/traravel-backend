name: Tests

on:
  pull_request:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    # Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: traravel_testing
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s

    strategy:
      matrix:
        operating-sysem: [ubuntu-latest]
        php-versions: ["8.1", "8.0"]
        dependency-stability: [prefer-stable]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP Versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions}}

      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP Dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Copy .env.testing
        run: php -r "file_exists('.env.testing') || copy('.env.testing.example', '.env.testing');"

      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate Testing Key
        run: php artisan key:generate --env=testing

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Migrations
        # Set environment variables
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: traravel_testing
          DB_PORT: 33306
          DB_USER: root
        run: php artisan migrate --seed

      - name: Passport install
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: traravel_testing
          DB_PORT: 33306
          DB_USER: root
        run: php artisan passport:install --env=testing

      - name: Passport keys
        run: php artisan passport:keys --env=testing --force

      - name: Show Dir
        run: pwd

      - name: PHP Version
        run: php --version

      # Code quality
      - name: Execute Tests Via PHPUnit
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: traravel_testing
          DB_PORT: 33306
          DB_USER: root
        run: php artisan test
